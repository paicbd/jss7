<project basedir="." default="assemble">
	<property environment="sys" />
	<condition property="mvn.executable" value="${sys.M2_HOME}\bin\mvn.bat" else="mvn">
		<os family="windows" />
	</condition>

	<property name="packageprefix" value="org.restcomm.protocols.ss7.map.load.ussd" />

	<property name="javac.source" value="1.8" />
	<property name="srcroot" value="${root}/src" />

	<property name="assemble.dir" value="${ant.file.restcomm.release}/../target/load" />

	<property name="test.server.channelType" value="sctp" />
	<property name="test.server.hostIp" value="127.0.0.1" />
	<property name="test.server.hostPort" value="8011" />
	<property name="test.server.extraHostAddress" value="-1" /> <!-- Not yet supported -->
	<property name="test.server.peerIp" value="127.0.0.1" />
	<property name="test.server.peerPort" value="8012" />
	<!-- Application Server Functionality, possible values: AS, SGW, IPSP (Server) -->
	<property name="test.server.asFunctionality" value="IPSP" />
	<property name="test.server.rc" value="101" /> <!-- Routing Context -->
	<property name="test.server.na" value="102" /> <!-- Network Appearance -->
	<property name="test.server.originatingPc" value="1" />
	<property name="test.server.destinationPc" value="2" />
	<property name="test.server.si" value="3" /> <!-- Service Indicator -->
	<property name="test.server.ni" value="2" /> <!-- Network Indicator -->
	<property name="test.server.ussdSsn" value="147" /> <!-- Remote SSN -->
	<property name="test.server.hlrSsn" value="6" /> <!-- Local HLR SSN -->
	<property name="test.server.mscSsn" value="8" /> <!-- Local MSC SSN -->

	<property name="test.client.numOfDialogs" value="1440000" />
	<property name="test.client.concurrentDialog" value="400" />
	<property name="test.client.channelType" value="sctp" />
	<property name="test.client.hostIp" value="127.0.0.1" />
	<property name="test.client.hostPort" value="8011" />
	<property name="test.client.extraHostAddress" value="-1" /> <!-- Not yet supported -->
	<property name="test.client.peerIp" value="127.0.0.1" />
	<property name="test.client.peerPort" value="8012" />
	<!-- Application Server Functionality, possible values: AS, SGW, IPSP (Client) -->
	<property name="test.client.asFunctionality" value="IPSP" />
	<property name="test.client.rc" value="101" /> <!-- Routing Context -->
	<property name="test.client.na" value="102" /> <!-- Network Appearance -->
	<property name="test.client.originatingPc" value="1" />
	<property name="test.client.destinationPc" value="2" />
	<property name="test.client.si" value="3" /> <!-- Service Indicator -->
	<property name="test.client.ni" value="2" /> <!-- Network Indicator -->
	<property name="test.client.ussdSsn" value="147" /> <!-- Remote SSN -->
	<property name="test.client.hlrSsn" value="6" /> <!-- Local HLR SSN -->
	<property name="test.client.mscSsn" value="8" /> <!-- Local Subsystem Number -->
	<property name="test.client.clientAddress" value="1111112" /> <!-- Client SCCP Address -->
	<property name="test.client.serverAddress" value="9960639999" /> <!-- Server SCCP Address -->

	<path id="project.class.path">
		<pathelement location="${assemble.dir}/sctp-api.jar" />
		<pathelement location="${assemble.dir}/sctp-impl.jar" />
		<pathelement location="${assemble.dir}/map-api.jar" />
		<pathelement location="${assemble.dir}/map-impl.jar" />
		<pathelement location="${assemble.dir}/isup-api.jar" />
		<pathelement location="${assemble.dir}/isup-impl.jar" />
		<pathelement location="${assemble.dir}/map-load.jar" />
		<pathelement location="${assemble.dir}/tcap-api.jar" />
		<pathelement location="${assemble.dir}/tcap-impl.jar" />
		<pathelement location="${assemble.dir}/sccp-api.jar" />
		<pathelement location="${assemble.dir}/sccp-impl.jar" />
		<pathelement location="${assemble.dir}/sccp-api-ext.jar" />
		<pathelement location="${assemble.dir}/sccp-impl-ext.jar" />
		<pathelement location="${assemble.dir}/ss7-ext-api.jar" />
		<pathelement location="${assemble.dir}/ss7-ext-impl.jar" />
		<pathelement location="${assemble.dir}/m3ua-api.jar" />
		<pathelement location="${assemble.dir}/m3ua-impl.jar" />
		<pathelement location="${assemble.dir}/mtp-api.jar" />
		<pathelement location="${assemble.dir}/mtp.jar" />
		<pathelement location="${assemble.dir}/restcomm-congestion.jar" />
		<pathelement location="${assemble.dir}/commons.jar" />
		<pathelement location="${assemble.dir}/commons-email.jar" />

		<!-- lic dep -->
		<pathelement location="${assemble.dir}/PAiClicenser.jar" />
		<pathelement location="${assamble.dir}/LICENSE4J-Runtime-Library.jar" />

		<!-- Stats -->
		<pathelement location="${assemble.dir}/statistics-api.jar" />
		<pathelement location="${assemble.dir}/statistics-impl.jar" />
		
		<!-- restcomm 3rd party -->
		<pathelement location="${assemble.dir}/asn.jar" />
		<pathelement location="${assemble.dir}/stream.jar" />

		<!-- real 3rd party -->
		<pathelement location="${assemble.dir}/log4j.jar" />
		<pathelement location="${assemble.dir}/javolution.jar" />
		<pathelement location="${assemble.dir}/concurrent.jar" />
		<pathelement location="${assemble.dir}/guava.jar" />
		<pathelement location="${assemble.dir}/netty-all.jar" />
		<pathelement location="src/main/resources" />
	</path>

	<property name="cp.property" refid="project.class.path" />

	<target name="assemble" description="Builds load tests and assembles binaries.">
		<echo message="Java Version: ${java.version}" />
		<echo message="Java home: ${java.home}" />
		<fail message="Unsupported Java version: ${java.version}. Make sure that the version of the Java compiler is 1.7 (7.0) or greater.">
			<condition>
				<not>
					<or>
						<contains string="${java.version}" substring="1.7" casesensitive="false" />
						<contains string="${java.version}" substring="1.8" casesensitive="false" />
						<matches string="${java.version}" pattern="^11\." />
					</or>
				</not>
			</condition>
		</fail>

		<exec executable="${mvn.executable}" dir="${ant.file.restcomm.release}/../">
			<arg line="install" />
		</exec>

		<exec executable="${mvn.executable}" dir="${ant.file.restcomm.release}/../">
			<arg line="install -Passemble" />
		</exec>
	</target>

	<target name="server" description="run the Load Test Server.">
		<echo message="${cp.property}" />
		<delete dir="server" />
		<mkdir dir="server" />
		<delete file="log4j-server.log" />
		<java classname="${packageprefix}.Server" fork="true" maxmemory="2048m" classpathref="project.class.path" dir="server">
			<jvmarg value="-Dlog.file.name=log4j-server.log" />
			<jvmarg value="-Djboss.server.base.dir=/opt/paic/map-load" />
			<jvmarg value="-Xms2048m"/>
			<jvmarg value="-Xmx2048m"/>
			<jvmarg value="-Xmn128m"/>
			<jvmarg value="-XX:PermSize=256m"/>
			<jvmarg value="-XX:MaxPermSize=256m"/>
			<jvmarg value="-XX:+HeapDumpOnOutOfMemoryError"/>
			<!--
			<jvmarg value="-XX:CMSInitiatingOccupancyFraction=80"/>
			<jvmarg value="-XX:+UseConcMarkSweepGC"/>
			<jvmarg value="-XX:+CMSIncrementalMode"/>
			<jvmarg value="-XX:-CMSIncrementalPacing"/>
			<jvmarg value="-XX:CMSIncrementalDutyCycleMin=100"/>
			<jvmarg value="-XX:CMSIncrementalDutyCycle=100"/>
			<jvmarg value="-Dsun.rmi.dgc.client.gcInterval=3600000"/>
			<jvmarg value="-Dorg.jboss.resolver.warning=true"/>
			<jvmarg value="-Djava.net.preferIPv4Stack=true"/>
			<jvmarg value="-Dio.netty.leakDetection.level=advanced"/>
			-->
			<jvmarg value="-XX:+UseParallelOldGC"/>
			<!--
			<jvmarg value="-XX:+PrintGCDetails" />
			<jvmarg value="-XX:+PrintGCTimeStamps" />
			-->
			<arg value="${test.server.channelType}" />
			<arg value="${test.server.hostIp}" />
			<arg value="${test.server.hostPort}" />
			<arg value="${test.server.extraHostAddress}" />
			<arg value="${test.server.peerIp}" />
			<arg value="${test.server.peerPort}" />
			<arg value="${test.server.asFunctionality}" />
			<arg value="${test.server.rc}" />
			<arg value="${test.server.na}" />
			<arg value="${test.server.originatingPc}" />
			<arg value="${test.server.destinationPc}" />
			<arg value="${test.server.si}" />
			<arg value="${test.server.ni}" />
			<arg value="${test.server.ussdSsn}" />
			<arg value="${test.server.hlrSsn}" />
			<arg value="${test.server.mscSsn}" />
			<arg value="16" /> <!-- deliveryTransferMessageThreadCount -->
		</java>
	</target>

	<target name="client" description="run the Load Test Client">
		<echo message="${cp.property}" />
		<delete dir="client" />
		<mkdir dir="client" />
		<java classname="${packageprefix}.Client" fork="true" maxmemory="2048m" classpathref="project.class.path" dir="client">
			<jvmarg value="-Dlog.file.name=log4j-client.log"/>
			<jvmarg value="-Djboss.server.base.dir=/opt/paic/map-load" />
			<jvmarg value="-Xms2048m"/>
			<jvmarg value="-Xmx2048m"/>
			<jvmarg value="-Xmn128m"/>
			<jvmarg value="-XX:PermSize=256m"/>
			<jvmarg value="-XX:MaxPermSize=256m"/>
			<jvmarg value="-XX:+HeapDumpOnOutOfMemoryError"/>
			<!--
			<jvmarg value="-XX:CMSInitiatingOccupancyFraction=80"/>
			<jvmarg value="-XX:+UseConcMarkSweepGC"/>
			<jvmarg value="-XX:+CMSIncrementalMode"/>
			<jvmarg value="-XX:-CMSIncrementalPacing"/>
			<jvmarg value="-XX:CMSIncrementalDutyCycleMin=100"/>
			<jvmarg value="-XX:CMSIncrementalDutyCycle=100"/>
			<jvmarg value="-Dsun.rmi.dgc.client.gcInterval=3600000"/>
			<jvmarg value="-Dorg.jboss.resolver.warning=true"/>
			<jvmarg value="-Djava.net.preferIPv4Stack=true"/>
			<jvmarg value="-Dio.netty.leakDetection.level=advanced"/>
			-->
			<jvmarg value="-XX:+UseParallelOldGC"/>
			<arg value="${test.client.numOfDialogs}" />
			<arg value="${test.client.concurrentDialog}" />
			<arg value="${test.client.channelType}" />
			<arg value="${test.client.hostIp}" />
			<arg value="${test.client.hostPort}" />
			<arg value="${test.client.extraHostAddress}" />
			<arg value="${test.client.peerIp}" />
			<arg value="${test.client.peerPort}" />
			<arg value="${test.client.asFunctionality}" />
			<arg value="${test.client.rc}" />
			<arg value="${test.client.na}" />
			<arg value="${test.client.originatingPc}" />
			<arg value="${test.client.destinationPc}" />
			<arg value="${test.client.si}" />
			<arg value="${test.client.ni}" />
			<arg value="${test.client.ussdSsn}" />
			<arg value="${test.client.hlrSsn}" />
			<arg value="${test.client.mscSsn}" />
			<arg value="${test.client.clientAddress}" />
			<arg value="${test.client.serverAddress}" />
			<arg value="1" /> <!-- routing indicator: 0 - GT, 1 - PC+SSN -->
			<arg value="16" /> <!-- deliveryTransferMessageThreadCount -->
			<arg value="-100" /> <!-- ramp up period, set to zero to enable single dialog injection -->
		</java>
	</target>

	<target name="clean" description="clean the logs">
		<delete dir="server" />
		<delete dir="client" />
	</target>
</project>